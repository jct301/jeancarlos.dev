---
import { ViewTransitions } from 'astro:transitions'

interface Props {
  title: string
  description: string
  image?: string
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const { title, description, image = '/opengraph.png' } = Astro.props
const imageUrl = new URL(image, Astro.url).href
---

<!-- Global Metadata -->
<meta charset='utf-8' />
<meta name='viewport' content='width=device-width,initial-scale=1' />
<link rel='icon' type='image/svg+xml' href='/favicon.svg' />
<meta name='generator' content={Astro.generator} />

<link rel='preload' href='/fonts/atkinson-regular.woff' as='font' type='font/woff' crossorigin />
<link rel='preload' href='/fonts/atkinson-bold.woff' as='font' type='font/woff' crossorigin />

<!-- Canonical URL -->
<link rel='canonical' href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name='title' content={title} />
<meta name='description' content={description} />

<!-- Open Graph / Facebook -->
<meta property='og:type' content='website' />
<meta property='og:url' content={canonicalURL} />
<meta property='og:title' content={title} />
<meta property='og:description' content={description} />
<meta property='og:image' content={imageUrl} />
<meta property='og:image:width' content='1200' />
<meta property='og:image:heigth' content='630' />

<!-- Twitter -->
<meta content='summary_large_image' property='twitter:card' />
<meta content={canonicalURL} property='twitter:url' />
<meta content={title} property='twitter:title' />
<meta content={description} property='twitter:description' />
<meta content={imageUrl} property='twitter:image' />

<!-- Sitemap -->
<link rel='sitemap' href='/sitemap-index.xml' />

<!-- RSS Feed -->
<link rel='alternate' type='application/rss+xml' title={title} href={`${Astro.site}rss.xml`} />

<!-- Global Scripts -->
<script is:inline src='/js/theme.js'></script>
<script is:inline src='/js/scroll.js'></script>
<script is:inline src='/js/animate.js'></script>

<!-- <ViewTransitions  /> -->
<ViewTransitions />

<script>
  import type { TransitionBeforeSwapEvent } from 'astro:transitions/client'
  document.addEventListener('astro:before-swap', (e) =>
    [...(e as TransitionBeforeSwapEvent).newDocument.head.querySelectorAll('link[as="font"]')].forEach((link) =>
      link.remove(),
    ),
  )
</script>
